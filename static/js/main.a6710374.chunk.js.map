{"version":3,"sources":["components/Section/Section.module.css","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/Notification/Notification.js","App.js","index.js","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["module","exports","Statistics","good","neutral","bad","onTotal","onPercentage","FeedbackOptions","options","onLeaveFeedback","map","option","className","styles","button","type","name","onClick","shortid","generate","Section","title","children","Notification","message","App","state","countTotalFeedback","countPositiveFeedbackPercentage","result","percentage","Math","round","e","target","setState","prevState","total","this","Percentage","objKey","Object","keys","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gIACAA,EAAOC,QAAU,CAAC,MAAQ,yB,uHCsBXC,EApBI,SAAC,GAAmD,IAAjDC,EAAgD,EAAhDA,KAAMC,EAA0C,EAA1CA,QAASC,EAAiC,EAAjCA,IAAKC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,aACjD,OACE,qCACE,sCAASJ,KACT,yCAAYC,KACZ,qCAAQC,KACR,uCAAUC,KACV,mDAAsBC,EAAtB,W,gCCkBSC,EAvBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,mCACGD,EAAQE,KAAI,SAACC,GAAD,OACX,wBACEC,UAAWC,IAAOC,OAElBC,KAAK,SACLC,KAAML,EACNM,QAASR,EALX,SAOGE,GALIO,IAAQC,kB,iBCMRC,EAbC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,qCACE,oBAAIV,UAAWC,IAAOQ,MAAtB,SAA8BA,IAC7BC,MCKQC,EAVM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OACE,mCACE,4BAAIA,OC0DKC,E,4MAzDbC,MAAQ,CACNxB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPuB,mBAAqB,WAAO,IAAD,EACM,EAAKD,MAEpC,OAHyB,EACjBxB,KADiB,EACXC,QADW,EACFC,K,EAIzBwB,gCAAkC,WAChC,IAAMC,EAAS,EAAKF,qBAEdG,EAAqB,IADV,EAAKJ,MAAdxB,KAC0B2B,EAClC,OAAOE,KAAKC,MAAMF,I,EAGpBrB,gBAAkB,SAACwB,GACjB,IAAMjB,EAAOiB,EAAEC,OAAOlB,KACtB,EAAKmB,UAAS,SAACC,GAAD,sBACXpB,EAAOoB,EAAUpB,GAAQ,O,4CAI9B,WACE,IAAMqB,EAAQC,KAAKX,qBACbY,EAAaD,KAAKV,kCAClBY,EAASC,OAAOC,KAAKJ,KAAKZ,OAChC,OACE,mCACE,gCACE,cAAC,EAAD,CAASL,MAAM,wBAAf,SACE,cAAC,EAAD,CACEb,QAASgC,EACT/B,gBAAiB6B,KAAK7B,oBAGf,IAAV4B,EACC,cAAC,EAAD,CAAcb,QAAS,sBAEvB,cAAC,EAAD,CAASH,MAAM,aAAf,SACE,cAAC,EAAD,CACEnB,KAAMoC,KAAKZ,MAAMxB,KACjBC,QAASmC,KAAKZ,MAAMvB,QACpBC,IAAKkC,KAAKZ,MAAMtB,IAChBC,QAASgC,EACT/B,aAAciC,e,GAhDZI,aCFlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCP1BjD,EAAOC,QAAU,CAAC,OAAS,mC","file":"static/js/main.a6710374.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__3FRhG\"};","import React from \"react\";\r\nimport propTypes from \"prop-types\";\r\n\r\nconst Statistics = ({ good, neutral, bad, onTotal, onPercentage }) => {\r\n  return (\r\n    <>\r\n      <p>Good:{good}</p>\r\n      <p>Neutral:{neutral}</p>\r\n      <p>Bad:{bad}</p>\r\n      <p>Total:{onTotal}</p>\r\n      <p>Positive feedback:{onPercentage}%</p>\r\n    </>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: propTypes.number.isRequired,\r\n  neutral: propTypes.number.isRequired,\r\n  bad: propTypes.number.isRequired,\r\n  onTotal: propTypes.number.isRequired,\r\n  onPercentage: propTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport shortid from \"shortid\";\r\nimport styles from \"./FeedbackOptions.module.css\";\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return (\r\n    <>\r\n      {options.map((option) => (\r\n        <button\r\n          className={styles.button}\r\n          key={shortid.generate()}\r\n          type=\"button\"\r\n          name={option}\r\n          onClick={onLeaveFeedback}\r\n        >\r\n          {option}\r\n        </button>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: propTypes.array.isRequired,\r\n  onLeaveFeedback: propTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport styles from \"./Section.module.css\";\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <>\r\n      <h2 className={styles.title}>{title}</h2>\r\n      {children}\r\n    </>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: propTypes.string.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Notification = ({ message }) => {\r\n  return (\r\n    <>\r\n      <p>{message}</p>\r\n    </>\r\n  );\r\n};\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\nexport default Notification;\r\n","import React, { Component } from \"react\";\nimport Statistics from \"./components/Statistics/Statistics\";\nimport FeedbackOptions from \"./components/FeedbackOptions/FeedbackOptions\";\nimport Section from \"./components/Section/Section\";\nimport Notification from \"./components/Notification/Notification\";\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    const result = good + neutral + bad;\n    return result;\n  };\n  countPositiveFeedbackPercentage = () => {\n    const result = this.countTotalFeedback();\n    const { good } = this.state;\n    const percentage = (good * 100) / result;\n    return Math.round(percentage);\n  };\n\n  onLeaveFeedback = (e) => {\n    const name = e.target.name;\n    this.setState((prevState) => ({\n      [name]: prevState[name] + 1,\n    }));\n  };\n\n  render() {\n    const total = this.countTotalFeedback();\n    const Percentage = this.countPositiveFeedbackPercentage();\n    const objKey = Object.keys(this.state);\n    return (\n      <>\n        <div>\n          <Section title=\"Please leave feedback\">\n            <FeedbackOptions\n              options={objKey}\n              onLeaveFeedback={this.onLeaveFeedback}\n            />\n          </Section>\n          {total === 0 ? (\n            <Notification message={\"No feedback given\"} />\n          ) : (\n            <Section title=\"Statistics\">\n              <Statistics\n                good={this.state.good}\n                neutral={this.state.neutral}\n                bad={this.state.bad}\n                onTotal={total}\n                onPercentage={Percentage}\n              />\n            </Section>\n          )}\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__2TR_S\"};"],"sourceRoot":""}